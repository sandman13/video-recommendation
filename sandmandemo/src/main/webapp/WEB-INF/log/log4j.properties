#这边使用controller,facade层分开打印和其他分开打印日志
log4j.rootLogger=debug, stdout,file
# 第一个参数是级别,后面的每一个参数对应一种日志情况.
#debug,info,warn,error

#这里确保控制台也能有输出内容.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%t] %-5p %C{1} : %m%n

#这里指定变量file的输出格式和方式
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender 
#org.apache.log4j.ConsoleAppender:控制台
#org.apache.log4j.FileAppender:文件.
#org.apache.log4j.DailyRollingFileAppender:每天产生一个配置文件.
#org.apache.log4j.RollingFileAppender:大小达到一定大小后产生一个新的配置文件.
log4j.appender.file.File=${webapp.root}/WEB-INF/logs/server.log 

#频度为每天
log4j.appender.file.DatePattern='.'yyyy-MM-dd

#log4j.appender.file.MaxBackupIndex=100
#用来设置备份文件的数量,也就是超过100KB之后.最多只有.1,
#org.apache.log4j.HTMLLayout（以HTML表格形式布局），
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
#指定输出格式
log4j.appender.file.layout=org.apache.log4j.PatternLayout  
log4j.appender.file.layout.ConversionPattern=%d{yyyy MM dd HH:mm:ss,SSS} [%t] %-5p %C{1} : %m%n
